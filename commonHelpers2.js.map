{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["/*const STORAGE_KEY = 'feedback-msg';\nconst form = document.querySelector('.feedback-form');\nconst textarea = form.querySelector('textarea');\n\nform.addEventListener('input', () => {\n  const formData = new FormData(form);\n  const email = formData.get('email');\n  const message = formData.get('message');\n\n  saveToLS('email', email);\n  saveToLS('message', message);\n});\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const name = formData.get('name');\n  const message = formData.get('message');\n  form.reset();\n\n  localStorage.removeItem('name');\n  localStorage.removeItem('message');\n  localStorage.removeItem('userData');\n});\n\nfunction saveToLS(key, value) {\n  const jsonData = JSON.stringify(value);\n  localStorage.setItem(key, jsonData);\n}\n\nfunction loadFromLS(key) {\n  const json = localStorage.getItem(key);\n  try {\n    const data = JSON.parse(json);\n    return data;\n  } catch {\n    return json;\n  }\n}\nwindow.addEventListener('DOMContentLoaded', () => {\n  const email = loadFromLS('email');\n  const message = loadFromLS('message');\n  form.elements.email.value = email;\n  form.elements.message.value = message;\n});*/\n\nconst STORAGE_KEY = 'feedback-form-state';\nlet formData = { email: '', message: '' };\n\nconst form = document.querySelector('.feedback-form');\n\n// Load data from local storage when the DOM is fully loaded\nwindow.addEventListener('DOMContentLoaded', () => {\n  const savedData = loadFromLS(STORAGE_KEY);\n  if (savedData) {\n    formData = savedData;\n    form.elements.email.value = formData.email || '';\n    form.elements.message.value = formData.message || '';\n  }\n});\n\nform.addEventListener('input', event => {\n  const { name, value } = event.target;\n  formData[name] = value.trim();\n  saveToLS(STORAGE_KEY, formData);\n});\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  if (!formData.email || !formData.message) {\n    alert('Fill please all fields');\n  } else {\n    console.log(formData);\n    localStorage.removeItem(STORAGE_KEY);\n    formData = { email: '', message: '' };\n    form.reset();\n  }\n});\n\nfunction saveToLS(key, value) {\n  const jsonData = JSON.stringify(value);\n  localStorage.setItem(key, jsonData);\n}\n\nfunction loadFromLS(key) {\n  const json = localStorage.getItem(key);\n  if (!json) {\n    return null;\n  }\n  try {\n    const data = JSON.parse(json);\n    return data;\n  } catch {\n    return null;\n  }\n}\n"],"names":["STORAGE_KEY","formData","form","savedData","loadFromLS","event","name","value","saveToLS","key","jsonData","json"],"mappings":"oDA+CA,MAAMA,EAAc,sBACpB,IAAIC,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,EAEvC,MAAMC,EAAO,SAAS,cAAc,gBAAgB,EAGpD,OAAO,iBAAiB,mBAAoB,IAAM,CAChD,MAAMC,EAAYC,EAAWJ,CAAW,EACpCG,IACFF,EAAWE,EACXD,EAAK,SAAS,MAAM,MAAQD,EAAS,OAAS,GAC9CC,EAAK,SAAS,QAAQ,MAAQD,EAAS,SAAW,GAEtD,CAAC,EAEDC,EAAK,iBAAiB,QAASG,GAAS,CACtC,KAAM,CAAE,KAAAC,EAAM,MAAAC,GAAUF,EAAM,OAC9BJ,EAASK,CAAI,EAAIC,EAAM,KAAI,EAC3BC,EAASR,EAAaC,CAAQ,CAChC,CAAC,EAEDC,EAAK,iBAAiB,SAAUG,GAAS,CACvCA,EAAM,eAAc,EAChB,CAACJ,EAAS,OAAS,CAACA,EAAS,QAC/B,MAAM,wBAAwB,GAE9B,QAAQ,IAAIA,CAAQ,EACpB,aAAa,WAAWD,CAAW,EACnCC,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,EACnCC,EAAK,MAAK,EAEd,CAAC,EAED,SAASM,EAASC,EAAKF,EAAO,CAC5B,MAAMG,EAAW,KAAK,UAAUH,CAAK,EACrC,aAAa,QAAQE,EAAKC,CAAQ,CACpC,CAEA,SAASN,EAAWK,EAAK,CACvB,MAAME,EAAO,aAAa,QAAQF,CAAG,EACrC,GAAI,CAACE,EACH,OAAO,KAET,GAAI,CAEF,OADa,KAAK,MAAMA,CAAI,CAEhC,MAAU,CACN,OAAO,IACR,CACH"}